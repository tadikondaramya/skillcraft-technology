<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe - Player vs Computer</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { background-color: lightcyan; text-align: center; font-family: Arial, sans-serif; }
        .container { height: 70vh; display: flex; justify-content: center; align-items: center; }
        .game { height: 60vmin; width: 60vmin; display: flex; flex-wrap: wrap; gap: 1.5vmin; justify-content: center; }
        .box { height: 18vmin; width: 18vmin; border-radius: 1rem; border: none; box-shadow: 0 0 1rem rgba(0,0,0,0.3); font-size: 8vmin; background-color: yellow; cursor: pointer; }
        .box:hover { background-color: chocolate; }
        #reset, #new-btn { padding: 1rem; font-size: 1.25rem; background: #191913; color: white; border-radius: 1rem; border: none; cursor: pointer; margin-top: 10px; }
        #msg { font-size: 8vmin; }
        .msg-container { height: 30vmin; display: none; }
        .show { display: block !important; }
        .turn-indicator { font-size: 2rem; margin-top: 10px; }
    </style>
</head>
<body>
    <h1>Tic Tac Toe - Player vs Computer</h1>
    <p class="turn-indicator" id="turn-text">Player's Turn (O)</p>
    <div class="msg-container">
        <p id="msg">Winner</p>
        <button id="new-btn">New Game</button>
    </div>
    <main>
        <div class="container">
            <div class="game">
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
                <button class="box"></button>
            </div>
        </div>
        <button id="reset">Reset Game</button>
    </main>

    <script>
        let boxes = document.querySelectorAll('.box');
        let resetBtn = document.querySelector('#reset');
        let newGameBtn = document.querySelector('#new-btn');
        let msgContainer = document.querySelector('.msg-container');
        let msg = document.querySelector('#msg');
        let turnText = document.querySelector('#turn-text');
        let turnO = true; // Player starts

        // Load sound effects
        const clickSound = new Audio('click.mp3');
        const winSound = new Audio('win.mp3');
        const drawSound = new Audio('draw.mp3');

        clickSound.volume = 0.5;
        winSound.volume = 0.7;
        drawSound.volume = 0.6;

        const winPatterns = [
            [0, 1, 2], [0, 3, 6], [0, 4, 8],
            [1, 4, 7], [2, 5, 8], [2, 4, 6],
            [3, 4, 5], [6, 7, 8]
        ];

        // Function to handle player move
        boxes.forEach((box, index) => {
            box.addEventListener('click', function () {
                if (!box.innerText && turnO) { // Prevent overriding
                    clickSound.play();
                    box.innerText = 'O';
                    box.style.color = 'green';
                    turnO = false;
                    turnText.innerText = "Computer's Turn (X)";
                    box.disabled = true;
                    checkWinner();
                    setTimeout(computerMove, 500); // Let computer play
                }
            });
        });

        // Function for computer's move
        const computerMove = () => {
            if (!turnO) {
                let availableBoxes = [...boxes].filter(box => box.innerText === "");
                if (availableBoxes.length > 0) {
                    let randomBox = availableBoxes[Math.floor(Math.random() * availableBoxes.length)];
                    clickSound.play();
                    randomBox.innerText = 'X';
                    randomBox.style.color = 'black';
                    randomBox.disabled = true;
                    turnO = true;
                    turnText.innerText = "Player's Turn (O)";
                    checkWinner();
                }
            }
        };

        // Function to check for a winner
        const checkWinner = () => {
            let hasWin = false;
            for (let pattern of winPatterns) {
                let [a, b, c] = pattern;
                let pos1Val = boxes[a].innerText;
                let pos2Val = boxes[b].innerText;
                let pos3Val = boxes[c].innerText;

                if (pos1Val && pos1Val === pos2Val && pos2Val === pos3Val) {
                    showWinner(pos1Val);
                    hasWin = true;
                    return;
                }
            }

            // If no winner but all boxes are filled, it's a draw
            if (!hasWin && [...boxes].every((box) => box.innerText !== "")) {
                msg.innerText = 'Match Drawn';
                msgContainer.classList.add('show');
                drawSound.play();
            }
        };

        // Function to display winner message
        const showWinner = (winner) => {
            msg.innerText = `Congratulations, Winner is ${winner}`;
            msgContainer.classList.add('show');
            winSound.play();
            disableBoxes();
        };

        // Function to disable all boxes
        const disableBoxes = () => {
            boxes.forEach(box => box.disabled = true);
        };

        // Function to enable all boxes
        const enableBoxes = () => {
            boxes.forEach(box => {
                box.disabled = false;
                box.innerText = "";
            });
        };

        // Function to reset the game
        const resetGame = () => {
            turnO = true;
            enableBoxes();
            msgContainer.classList.remove('show');
            turnText.innerText = "Player's Turn (O)";
        };

        newGameBtn.addEventListener('click', resetGame);
        resetBtn.addEventListener('click', resetGame);
    </script>
</body>
</html>
